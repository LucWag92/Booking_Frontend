{"version":3,"sources":["context/auth-context.js","pages/Auth.jsx","components/Spinner/spinner.jsx","components/Bookings/BookingList/BookingList.jsx","components/Bookings/BookingsChart/BookingsChart.jsx","pages/Bookings.jsx","components/Modal/Modal.jsx","components/Backdrop/Backdrop.jsx","components/Events/EventList/EventItem/EventItem.jsx","components/Events/EventList/EventList.jsx","pages/Events.jsx","components/Navigation/MainNavigation.jsx","App.jsx","index.js"],"names":["React","createContext","token","userId","login","logout","AuthPage","url","process","REACT_APP_TEST_URL","useState","isLoggedIn","setIsLoggedIn","emailRef","useRef","passwordRef","context","useContext","AuthContext","isEmailActive","setEmailActive","emailValue","setEmailValue","isPasswordActive","setPasswordActive","passwordValue","setPasswordValue","responseElement","setResponseElement","dynamicStyle","backgroundColor","Fragment","className","onSubmit","event","preventDefault","email","current","value","password","console","log","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","tokenExpiration","createUser","catch","err","style","id","type","onChange","e","text","target","ref","htmlFor","Button","variant","color","onClick","prevValue","Spinner","CircularProgress","BookingList","props","bookings","map","booking","title","Date","createdAt","toLocaleDateString","onDelete","_id","BookingsChart","priceRange","anz","reduce","prev","price","Paper","max","valueField","argumentField","BookingsPage","isLoading","setisLoading","setbookings","isList","setIsList","useEffect","fetchBookings","Authorization","disabled","bookingId","prevBookings","filter","pB","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","date","creatorId","onDetail","eventId","eventList","events","authUserId","creator","onViewDetail","EventsPage","titleRef","priceRef","dateRef","descriptionRef","creating","setCreating","setEvents","setIsLoading","selectedEvent","setSelectedEvent","cancelHandler","find","description","prevEvents","createEvent","confirmHandler","row","bookEventHandler","MainNavigation","to","App","settoken","setuserId","Provider","tokenFc","userIdFc","from","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f1ccdbe.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default React.createContext({\r\n  token: \"\",\r\n  userId: \"\",\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Auth.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\nconst AuthPage = () => {\r\n  const url =\r\n    process.env.REACT_APP_TEST_URL ||\r\n    \"https://bookingbackendlucwag.herokuapp.com/graphql\";\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const emailRef = React.useRef(null);\r\n  const passwordRef = React.useRef(null);\r\n  const context = useContext(AuthContext);\r\n  const [isEmailActive, setEmailActive] = useState(false);\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [isPasswordActive, setPasswordActive] = useState(false);\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [responseElement, setResponseElement] = useState(null);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    console.log(email, password);\r\n    console.log(context);\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      setResponseElement(<div>Check your input</div>);\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password: String!){\r\n          login(email: $email, password: $password) {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n    };\r\n    if (!isLoggedIn) {\r\n      requestBody = {\r\n        query: `\r\n          mutation CreateUser($email: String!, $password: String!){\r\n            createUser(userInput: {email: $email, password: $password}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n      };\r\n    }\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.data.login?.token) {\r\n          context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n          setResponseElement(<div>{email} is successfully logged in</div>);\r\n        } else if (resData.data.createUser?.email) {\r\n          setResponseElement(<div>{email} was created.</div>);\r\n        } else {\r\n          setResponseElement(\r\n            <div>User already exists. Please use LogIn Page</div>\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setResponseElement(<div>Error loggin in {email}</div>);\r\n      });\r\n  };\r\n\r\n  const dynamicStyle = {\r\n    backgroundColor: isLoggedIn\r\n      ? \"rgba(106, 1, 177, 0.1)\"\r\n      : \"rgba(106, 1, 177, 0.3)\",\r\n  };\r\n\r\n  const handleEMailTextChange = (text) => {\r\n    setEmailValue(text);\r\n\r\n    if (text !== \"\") {\r\n      setEmailActive(true);\r\n    } else {\r\n      setEmailActive(false);\r\n    }\r\n  };\r\n  const handlePasswordTextChange = (text) => {\r\n    setPasswordValue(text);\r\n\r\n    if (text !== \"\") {\r\n      setPasswordActive(true);\r\n    } else {\r\n      setPasswordActive(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form className=\"auth-form\" onSubmit={submitHandler} style={dynamicStyle}>\r\n        <div className=\"form-header\">\r\n          {isLoggedIn ? \"Login\" : \"Signup\"} Modus\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <div id=\"float-label\">\r\n            <input\r\n              type=\"email\"\r\n              value={emailValue}\r\n              onChange={(e) => {\r\n                handleEMailTextChange(e.target.value);\r\n              }}\r\n              ref={emailRef}\r\n              id=\"email\"\r\n            />\r\n            <label className={isEmailActive ? \"Active\" : \"\"} htmlFor=\"email\">\r\n              E-mail\r\n            </label>\r\n          </div>\r\n          <div id=\"float-label\">\r\n            <input\r\n              type=\"password\"\r\n              value={passwordValue}\r\n              onChange={(e) => {\r\n                handlePasswordTextChange(e.target.value);\r\n              }}\r\n              ref={passwordRef}\r\n              id=\"password\"\r\n            />\r\n            <label\r\n              className={isPasswordActive ? \"Active\" : \"\"}\r\n              htmlFor=\"password\"\r\n            >\r\n              Password\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-action\">\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setIsLoggedIn((prevValue) => !prevValue);\r\n            }}\r\n          >\r\n            Switch to {isLoggedIn ? \"Signup\" : \"Login\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      {responseElement}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./BookingList.css\";\r\n\r\nconst BookingList = (props) => {\r\n  return (\r\n    <ul className=\"bookings__list\">\r\n      {props.bookings.map((booking) => {\r\n        return (\r\n          <li key={booking._id} className=\"bookings__item\">\r\n            <div className=\"bookings__item-data\">\r\n              {booking.event.title} -{\" \"}\r\n              {new Date(booking.createdAt).toLocaleDateString()}\r\n            </div>\r\n            <div className=\"bookings__item-actions\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"btn\"\r\n                onClick={() => props.onDelete(booking._id)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nexport default BookingList;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nimport { Animation } from \"@devexpress/dx-react-chart\";\r\n\r\nconst BookingsChart = (props) => {\r\n  const low = props.bookings.reduce((prev, current) => {\r\n    const check = current.event.price < 2;\r\n    return check ? prev + 1 : prev;\r\n  }, 0);\r\n  const medium = props.bookings.reduce((prev, current) => {\r\n    const check = 2 < current.event.price && current.event.price < 5;\r\n    return check < 5 ? prev + 1 : prev;\r\n  }, 0);\r\n  const high = props.bookings.reduce((prev, current) => {\r\n    const check = 5 < current.event.price && current.event.price < 10;\r\n    return check ? prev + 1 : prev;\r\n  }, 0);\r\n  const data = [\r\n    { priceRange: \"low\", anz: low },\r\n    { priceRange: \"medium\", anz: medium },\r\n    { priceRange: \"high\", anz: high },\r\n  ];\r\n  return (\r\n    <Paper>\r\n      <Chart data={data}>\r\n        <ArgumentAxis />\r\n        <ValueAxis max={7} />\r\n\r\n        <BarSeries\r\n          valueField=\"anz\"\r\n          argumentField=\"priceRange\"\r\n          color=\"rgba(78, 0, 129, 0.5)\"\r\n        />\r\n        <Title text=\"Bookings\" />\r\n        <Animation />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BookingsChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { useContext } from \"react\";\r\nimport Spinner from \"../components/Spinner/spinner\";\r\nimport BookingList from \"../components/Bookings/BookingList/BookingList\";\r\nimport BookingChart from \"../components/Bookings/BookingsChart/BookingsChart\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Bookings.css\";\r\n\r\nconst BookingsPage = () => {\r\n  const url =\r\n    process.env.REACT_APP_TEST_URL ||\r\n    \"https://bookingbackendlucwag.herokuapp.com/graphql\";\r\n\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [bookings, setbookings] = useState([]);\r\n  const [isList, setIsList] = useState(true);\r\n  const context = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  const deleteBookingHandler = (bookingId) => {\r\n    if (!context.token) {\r\n      return;\r\n    }\r\n    setisLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n        mutation CancelBooking($bookingId: ID!) {\r\n          cancelBooking(bookingId: $bookingId) {\r\n            _id\r\n            title\r\n          }\r\n        }\r\n      `,\r\n      variables: { bookingId: bookingId },\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        setbookings((prevBookings) => {\r\n          const bookings = prevBookings.filter((pB) => {\r\n            return pB._id !== bookingId;\r\n          });\r\n          return bookings;\r\n        });\r\n        setisLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n  const fetchBookings = () => {\r\n    if (!context.token) {\r\n      setbookings(null);\r\n      return;\r\n    }\r\n    setisLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          bookings {\r\n            _id\r\n            createdAt\r\n            updatedAt\r\n            event {\r\n              _id\r\n              title\r\n              date\r\n              price\r\n            }\r\n            \r\n          }\r\n        }\r\n      `,\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const bookings = resData.data.bookings;\r\n        setbookings(bookings);\r\n        setisLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <React.Fragment>\r\n          <div className=\"switchButtons\">\r\n            <Button\r\n              disabled={isList}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className=\"switchBtn\"\r\n              onClick={() => setIsList(true)}\r\n            >\r\n              List\r\n            </Button>\r\n            <Button\r\n              disabled={!isList}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className=\"switchBtn\"\r\n              onClick={() => setIsList(false)}\r\n            >\r\n              Chart\r\n            </Button>\r\n          </div>\r\n          {isList ? (\r\n            <BookingList\r\n              bookings={bookings}\r\n              onDelete={deleteBookingHandler}\r\n            ></BookingList>\r\n          ) : (\r\n            <BookingChart bookings={bookings}></BookingChart>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BookingsPage;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Modal.css\";\r\nconst modal = (props) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <header className=\"modal__header\">\r\n        <h1>{props.title}</h1>\r\n      </header>\r\n      <section className=\"modal__content\">{props.children}</section>\r\n      <section className=\"modal__actions\">\r\n        {props.canCancel && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              props.onCancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        )}\r\n        {props.canConfirm && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              props.onConfirm();\r\n            }}\r\n          >\r\n            {props.confirmText}\r\n          </Button>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default modal;\r\n","import './Backdrop.css';\r\n\r\nconst backdrop = (props) => {\r\n  return <div className=\"backdrop\"></div>;\r\n};\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport \"./EventItem.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst eventItem = (props) => (\r\n  <li key={props._id} className=\"event__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>{props.price}$</h2>\r\n      <h2>{new Date(props.date).toLocaleDateString(\"de\")}</h2>\r\n    </div>\r\n    <div>\r\n      {props.userId !== props.creatorId ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className=\"btn\"\r\n          onClick={() => props.onDetail(props.eventId)}\r\n        >\r\n          View Details\r\n        </Button>\r\n      ) : (\r\n        <p>You are the Owner</p>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default eventItem;\r\n","import React from \"react\";\r\nimport \"./EventList.css\";\r\nimport EventItem from \"./EventItem/EventItem\";\r\n\r\nconst eventList = (props) => {\r\n  const events = props.events.map((event) => (\r\n    <EventItem\r\n      key={event._id}\r\n      eventId={event._id}\r\n      title={event.title}\r\n      price={event.price}\r\n      date={event.date}\r\n      userId={props.authUserId}\r\n      creatorId={event.creator._id}\r\n      onDetail={props.onViewDetail}\r\n    />\r\n  ));\r\n\r\n  return <ul className=\"event__list\">{events}</ul>;\r\n};\r\nexport default eventList;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/Backdrop/Backdrop\";\r\nimport \"./Events.css\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { useContext } from \"react\";\r\nimport EventList from \"../components/Events/EventList/EventList\";\r\nimport Spinner from \"../components/Spinner/spinner\";\r\n\r\nconst EventsPage = () => {\r\n  const url =\r\n    process.env.REACT_APP_TEST_URL ||\r\n    \"https://bookingbackendlucwag.herokuapp.com/graphql\";\r\n\r\n  const titleRef = useRef(null);\r\n  const priceRef = useRef(null);\r\n  const dateRef = useRef(null);\r\n  const descriptionRef = useRef(null);\r\n  const [creating, setCreating] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const context = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          events {\r\n            _id\r\n            title\r\n            description\r\n            date\r\n            price\r\n            creator {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        setEvents(resData.data.events);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const confirmHandler = () => {\r\n    const title = titleRef.current.value;\r\n    const price = +priceRef.current.value; // converts string to number\r\n    const date = dateRef.current.value;\r\n    const description = descriptionRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n    const event = {\r\n      title,\r\n      price,\r\n      date,\r\n      description,\r\n    };\r\n    console.log(event);\r\n\r\n    setCreating(false);\r\n\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!){\r\n          createEvent(eventInput: {title: $title, description: $description, price: $price, date: $date}) {\r\n            _id\r\n            title\r\n            description\r\n            date\r\n            price\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        title: title,\r\n        description: description,\r\n        price: price,\r\n        date: date,\r\n      },\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          ...[\r\n            {\r\n              _id: resData.data.createEvent._id,\r\n              title: resData.data.createEvent.title,\r\n              description: resData.data.createEvent.description,\r\n              date: resData.data.createEvent.date,\r\n              price: resData.data.createEvent.price,\r\n              creator: {\r\n                _id: context.userId,\r\n              },\r\n            },\r\n          ],\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const cancelHandler = () => {\r\n    setCreating(false);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  const bookEventHandler = () => {\r\n    if (!context.token) {\r\n      setSelectedEvent(null);\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n        mutation BookEvent($eventId: ID!){\r\n          bookEvent(eventId: $eventId) {\r\n            _id\r\n            createdAt\r\n            updatedAt\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        eventId: selectedEvent._id,\r\n      },\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        setSelectedEvent(null);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSelectedEvent(null);\r\n      });\r\n  };\r\n\r\n  const showDetailHandler = (eventId) => {\r\n    setSelectedEvent(events.find((e) => e._id === eventId));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {context.token && (\r\n        <div className=\"events-control\">\r\n          <p>Share your own Events!</p>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={() => setCreating(true)}\r\n          >\r\n            Create Event\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <EventList\r\n          events={events}\r\n          authUserId={context.userId}\r\n          onViewDetail={showDetailHandler}\r\n        ></EventList>\r\n      )}\r\n\r\n      {(creating || selectedEvent) && <Backdrop></Backdrop>}\r\n      {creating && (\r\n        <Modal\r\n          title=\"Add Event\"\r\n          canCancel\r\n          canConfirm\r\n          onCancel={() => {\r\n            cancelHandler();\r\n          }}\r\n          onConfirm={() => {\r\n            confirmHandler();\r\n          }}\r\n          confirmText=\"Confirm\"\r\n        >\r\n          <form>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" id=\"title\" ref={titleRef}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input type=\"number\" id=\"price\" ref={priceRef}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input type=\"datetime-local\" id=\"date\" ref={dateRef}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                row=\"4\"\r\n                ref={descriptionRef}\r\n              ></textarea>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n\r\n      {selectedEvent && (\r\n        <Modal\r\n          title={selectedEvent.title}\r\n          canCancel\r\n          canConfirm\r\n          onCancel={() => {\r\n            cancelHandler();\r\n          }}\r\n          onConfirm={() => {\r\n            bookEventHandler();\r\n          }}\r\n          confirmText={context.token ? \"Book\" : \"Sign in to book\"}\r\n        >\r\n          <h1>Eventname: {selectedEvent.title}</h1>\r\n          <h2>{selectedEvent.price}$</h2>\r\n          <h2>{new Date(selectedEvent.date).toLocaleDateString()}</h2>\r\n          <p>{selectedEvent.description}</p>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './MainNavigation.css';\r\nimport AuthContext from '../../context/auth-context';\r\nimport { useContext } from 'react';\r\n\r\nconst MainNavigation = () => {\r\n  const context = useContext(AuthContext);\r\n  return (\r\n    <header className=\"main-navigation\">\r\n      <div className=\"main-navigation__logo\">\r\n        <h1>BookingApp</h1>\r\n      </div>\r\n      <nav className=\"main-navigation__items\">\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/events\">Events</NavLink>\r\n          </li>\r\n          {context.token && (\r\n            <React.Fragment>\r\n              <li>\r\n                <NavLink to=\"/bookings\">Bookings</NavLink>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  onClick={() => context.logout()}\r\n                  className=\"LogOutButton\"\r\n                >\r\n                  Logout\r\n                </button>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {!context.token && (\r\n            <li>\r\n              <NavLink to=\"/auth\">Authentication</NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Route, Redirect, Switch, HashRouter } from \"react-router-dom\";\r\nimport AuthPage from \"./pages/Auth\";\r\nimport BookingsPage from \"./pages/Bookings\";\r\nimport EventsPage from \"./pages/Events\";\r\nimport MainNavigation from \"./components/Navigation/MainNavigation\";\r\nimport \"./App.css\";\r\nimport AuthContext from \"./context/auth-context\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [token, settoken] = useState(\"\");\r\n  const [userId, setuserId] = useState(\"\");\r\n  const login = (tokenFc, userIdFc, tokenExpiration) => {\r\n    settoken(tokenFc);\r\n    setuserId(userIdFc);\r\n  };\r\n  const logout = () => {\r\n    settoken(\"\");\r\n    setuserId(\"\");\r\n  };\r\n  return (\r\n    <HashRouter>\r\n      <AuthContext.Provider value={{ token, userId, login, logout }}>\r\n        <MainNavigation></MainNavigation>\r\n        <main className=\"main-content\">\r\n          <Switch>\r\n            {/* Wichtig damit nur bei / auf auth gewechselt wird und nicht alles folgende ignoriert wird */}\r\n            {token && <Redirect from=\"/\" to=\"/events\" exact></Redirect>}\r\n            {token && <Redirect from=\"/auth\" to=\"/events\" exact></Redirect>}\r\n            {!token && <Route path=\"/auth\" component={AuthPage}></Route>}\r\n            <Route path=\"/events\" component={EventsPage}></Route>\r\n            {token && <Route path=\"/bookings\" component={BookingsPage}></Route>}\r\n            {!token && <Redirect to=\"/auth\" exact></Redirect>}\r\n          </Switch>\r\n        </main>\r\n      </AuthContext.Provider>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}