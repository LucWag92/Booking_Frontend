{"version":3,"sources":["context/auth-context.js","pages/Auth.jsx","components/Spinner/spinner.jsx","components/Bookings/BookingList/BookingList.jsx","components/Bookings/BookingsChart/BookingsChart.jsx","pages/Bookings.jsx","components/Modal/Modal.jsx","components/Backdrop/Backdrop.jsx","components/Events/EventList/EventItem/EventItem.jsx","components/Events/EventList/EventList.jsx","pages/Events.jsx","components/Navigation/MainNavigation.jsx","App.jsx","index.js"],"names":["React","createContext","token","userId","login","logout","AuthPage","useState","isLoggedIn","setIsLoggedIn","emailRef","useRef","passwordRef","context","useContext","AuthContext","className","onSubmit","event","preventDefault","email","current","value","password","console","log","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","tokenExpiration","catch","err","htmlFor","type","id","ref","Button","variant","color","onClick","prevValue","Spinner","CircularProgress","BookingList","props","bookings","map","booking","title","Date","createdAt","toLocaleDateString","onDelete","_id","BookingsChart","priceRange","anz","reduce","prev","price","Paper","max","valueField","argumentField","text","BookingsPage","isLoading","setisLoading","setbookings","isList","setIsList","useEffect","fetchBookings","Authorization","Fragment","disabled","bookingId","prevBookings","filter","pB","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","date","creatorId","onDetail","eventId","eventList","events","authUserId","creator","onViewDetail","EventsPage","titleRef","priceRef","dateRef","descriptionRef","creating","setCreating","setEvents","setIsLoading","selectedEvent","setSelectedEvent","cancelHandler","find","e","description","prevEvents","createEvent","confirmHandler","row","bookEventHandler","MainNavigation","to","App","settoken","setuserId","Provider","tokenFc","userIdFc","from","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29218722.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default React.createContext({\r\n  token: \"\",\r\n  userId: \"\",\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Auth.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\nconst AuthPage = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const emailRef = React.useRef(null);\r\n  const passwordRef = React.useRef(null);\r\n  const context = useContext(AuthContext);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    console.log(email, password);\r\n    console.log(context);\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password: String!){\r\n          login(email: $email, password: $password) {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n    };\r\n    if (!isLoggedIn) {\r\n      requestBody = {\r\n        query: `\r\n          mutation CreateUser($email: String!, $password: String!){\r\n            createUser(userInput: {email: $email, password: $password}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n      };\r\n    }\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(\"https://bookingbackendlucwag.herokuapp.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        if (resData.data.login.token) {\r\n          context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form className=\"auth-form\" onSubmit={submitHandler}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" ref={emailRef} />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" ref={passwordRef} />\r\n      </div>\r\n      <div className=\"form-action\">\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setIsLoggedIn((prevValue) => !prevValue);\r\n          }}\r\n        >\r\n          Switch to {isLoggedIn ? \"Signup\" : \"Login\"}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./BookingList.css\";\r\n\r\nconst BookingList = (props) => {\r\n  return (\r\n    <ul className=\"bookings__list\">\r\n      {props.bookings.map((booking) => {\r\n        return (\r\n          <li key={booking._id} className=\"bookings__item\">\r\n            <div className=\"bookings__item-data\">\r\n              {booking.event.title} -{\" \"}\r\n              {new Date(booking.createdAt).toLocaleDateString()}\r\n            </div>\r\n            <div className=\"bookings__item-actions\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"btn\"\r\n                onClick={() => props.onDelete(booking._id)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nexport default BookingList;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from \"@devexpress/dx-react-chart-material-ui\";\r\n\r\nimport { Animation } from \"@devexpress/dx-react-chart\";\r\n\r\nconst BookingsChart = (props) => {\r\n  const low = props.bookings.reduce((prev, current) => {\r\n    const check = current.event.price < 2;\r\n    return check ? prev + 1 : prev;\r\n  }, 0);\r\n  const medium = props.bookings.reduce((prev, current) => {\r\n    const check = 2 < current.event.price && current.event.price < 5;\r\n    return check < 5 ? prev + 1 : prev;\r\n  }, 0);\r\n  const high = props.bookings.reduce((prev, current) => {\r\n    const check = 5 < current.event.price && current.event.price < 10;\r\n    return check ? prev + 1 : prev;\r\n  }, 0);\r\n  const data = [\r\n    { priceRange: \"low\", anz: low },\r\n    { priceRange: \"medium\", anz: medium },\r\n    { priceRange: \"high\", anz: high },\r\n  ];\r\n  return (\r\n    <Paper>\r\n      <Chart data={data}>\r\n        <ArgumentAxis />\r\n        <ValueAxis max={7} />\r\n\r\n        <BarSeries\r\n          valueField=\"anz\"\r\n          argumentField=\"priceRange\"\r\n          color=\"rgba(78, 0, 129, 0.5)\"\r\n        />\r\n        <Title text=\"Bookings\" />\r\n        <Animation />\r\n      </Chart>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BookingsChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { useContext } from \"react\";\r\nimport Spinner from \"../components/Spinner/spinner\";\r\nimport BookingList from \"../components/Bookings/BookingList/BookingList\";\r\nimport BookingChart from \"../components/Bookings/BookingsChart/BookingsChart\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Bookings.css\";\r\n\r\nconst BookingsPage = () => {\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [bookings, setbookings] = useState([]);\r\n  const [isList, setIsList] = useState(true);\r\n  const context = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  const deleteBookingHandler = (bookingId) => {\r\n    if (!context.token) {\r\n      return;\r\n    }\r\n    setisLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n        mutation CancelBooking($bookingId: ID!) {\r\n          cancelBooking(bookingId: $bookingId) {\r\n            _id\r\n            title\r\n          }\r\n        }\r\n      `,\r\n      variables: { bookingId: bookingId },\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(\"https://bookingbackendlucwag.herokuapp.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        setbookings((prevBookings) => {\r\n          const bookings = prevBookings.filter((pB) => {\r\n            return pB._id !== bookingId;\r\n          });\r\n          return bookings;\r\n        });\r\n        setisLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n  const fetchBookings = () => {\r\n    if (!context.token) {\r\n      setbookings(null);\r\n      return;\r\n    }\r\n    setisLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          bookings {\r\n            _id\r\n            createdAt\r\n            updatedAt\r\n            event {\r\n              _id\r\n              title\r\n              date\r\n              price\r\n            }\r\n            \r\n          }\r\n        }\r\n      `,\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(\"https://bookingbackendlucwag.herokuapp.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        const bookings = resData.data.bookings;\r\n        setbookings(bookings);\r\n        setisLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setisLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <React.Fragment>\r\n          <div className=\"switchButtons\">\r\n            <Button\r\n              disabled={isList}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className=\"switchBtn\"\r\n              onClick={() => setIsList(true)}\r\n            >\r\n              List\r\n            </Button>\r\n            <Button\r\n              disabled={!isList}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className=\"switchBtn\"\r\n              onClick={() => setIsList(false)}\r\n            >\r\n              Chart\r\n            </Button>\r\n          </div>\r\n          {isList ? (\r\n            <BookingList\r\n              bookings={bookings}\r\n              onDelete={deleteBookingHandler}\r\n            ></BookingList>\r\n          ) : (\r\n            <BookingChart bookings={bookings}></BookingChart>\r\n          )}\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BookingsPage;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Modal.css\";\r\nconst modal = (props) => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <header className=\"modal__header\">\r\n        <h1>{props.title}</h1>\r\n      </header>\r\n      <section className=\"modal__content\">{props.children}</section>\r\n      <section className=\"modal__actions\">\r\n        {props.canCancel && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              props.onCancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        )}\r\n        {props.canConfirm && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className=\"btn\"\r\n            onClick={() => {\r\n              props.onConfirm();\r\n            }}\r\n          >\r\n            {props.confirmText}\r\n          </Button>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default modal;\r\n","import './Backdrop.css';\r\n\r\nconst backdrop = (props) => {\r\n  return <div className=\"backdrop\"></div>;\r\n};\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport \"./EventItem.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst eventItem = (props) => (\r\n  <li key={props._id} className=\"event__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>{props.price}$</h2>\r\n      <h2>{new Date(props.date).toLocaleDateString(\"de\")}</h2>\r\n    </div>\r\n    <div>\r\n      {props.userId !== props.creatorId ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          className=\"btn\"\r\n          onClick={() => props.onDetail(props.eventId)}\r\n        >\r\n          View Details\r\n        </Button>\r\n      ) : (\r\n        <p>You are the Owner</p>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default eventItem;\r\n","import React from \"react\";\r\nimport \"./EventList.css\";\r\nimport EventItem from \"./EventItem/EventItem\";\r\n\r\nconst eventList = (props) => {\r\n  const events = props.events.map((event) => (\r\n    <EventItem\r\n      key={event._id}\r\n      eventId={event._id}\r\n      title={event.title}\r\n      price={event.price}\r\n      date={event.date}\r\n      userId={props.authUserId}\r\n      creatorId={event.creator._id}\r\n      onDetail={props.onViewDetail}\r\n    />\r\n  ));\r\n\r\n  return <ul className=\"event__list\">{events}</ul>;\r\n};\r\nexport default eventList;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/Backdrop/Backdrop\";\r\nimport \"./Events.css\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { useContext } from \"react\";\r\nimport EventList from \"../components/Events/EventList/EventList\";\r\nimport Spinner from \"../components/Spinner/spinner\";\r\n\r\nconst EventsPage = () => {\r\n  const titleRef = useRef(null);\r\n  const priceRef = useRef(null);\r\n  const dateRef = useRef(null);\r\n  const descriptionRef = useRef(null);\r\n  const [creating, setCreating] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const context = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          events {\r\n            _id\r\n            title\r\n            description\r\n            date\r\n            price\r\n            creator {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(\"https://bookingbackendlucwag.herokuapp.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        setEvents(resData.data.events);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const confirmHandler = () => {\r\n    const title = titleRef.current.value;\r\n    const price = +priceRef.current.value; // converts string to number\r\n    const date = dateRef.current.value;\r\n    const description = descriptionRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n    const event = {\r\n      title,\r\n      price,\r\n      date,\r\n      description,\r\n    };\r\n    console.log(event);\r\n\r\n    setCreating(false);\r\n\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!){\r\n          createEvent(eventInput: {title: $title, description: $description, price: $price, date: $date}) {\r\n            _id\r\n            title\r\n            description\r\n            date\r\n            price\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        title: title,\r\n        description: description,\r\n        price: price,\r\n        date: date,\r\n      },\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(\"https://bookingbackendlucwag.herokuapp.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          ...[\r\n            {\r\n              _id: resData.data.createEvent._id,\r\n              title: resData.data.createEvent.title,\r\n              description: resData.data.createEvent.description,\r\n              date: resData.data.createEvent.date,\r\n              price: resData.data.createEvent.price,\r\n              creator: {\r\n                _id: context.userId,\r\n              },\r\n            },\r\n          ],\r\n        ]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const cancelHandler = () => {\r\n    setCreating(false);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  const bookEventHandler = () => {\r\n    if (!context.token) {\r\n      setSelectedEvent(null);\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n        mutation BookEvent($eventId: ID!){\r\n          bookEvent(eventId: $eventId) {\r\n            _id\r\n            createdAt\r\n            updatedAt\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        eventId: selectedEvent._id,\r\n      },\r\n    };\r\n\r\n    // fetch(\"http://localhost:8000/graphql\", {\r\n    fetch(\"https://bookingbackendlucwag.herokuapp.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + context.token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Fetch Failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        console.log(resData);\r\n        setSelectedEvent(null);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSelectedEvent(null);\r\n      });\r\n  };\r\n\r\n  const showDetailHandler = (eventId) => {\r\n    setSelectedEvent(events.find((e) => e._id === eventId));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {context.token && (\r\n        <div className=\"events-control\">\r\n          <p>Share your own Events!</p>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={() => setCreating(true)}\r\n          >\r\n            Create Event\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <EventList\r\n          events={events}\r\n          authUserId={context.userId}\r\n          onViewDetail={showDetailHandler}\r\n        ></EventList>\r\n      )}\r\n\r\n      {(creating || selectedEvent) && <Backdrop></Backdrop>}\r\n      {creating && (\r\n        <Modal\r\n          title=\"Add Event\"\r\n          canCancel\r\n          canConfirm\r\n          onCancel={() => {\r\n            cancelHandler();\r\n          }}\r\n          onConfirm={() => {\r\n            confirmHandler();\r\n          }}\r\n          confirmText=\"Confirm\"\r\n        >\r\n          <form>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input type=\"text\" id=\"title\" ref={titleRef}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input type=\"number\" id=\"price\" ref={priceRef}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"date\">Date</label>\r\n              <input type=\"datetime-local\" id=\"date\" ref={dateRef}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                row=\"4\"\r\n                ref={descriptionRef}\r\n              ></textarea>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n\r\n      {selectedEvent && (\r\n        <Modal\r\n          title={selectedEvent.title}\r\n          canCancel\r\n          canConfirm\r\n          onCancel={() => {\r\n            cancelHandler();\r\n          }}\r\n          onConfirm={() => {\r\n            bookEventHandler();\r\n          }}\r\n          confirmText={context.token ? \"Book\" : \"Sign in to book\"}\r\n        >\r\n          <h1>Eventname: {selectedEvent.title}</h1>\r\n          <h2>{selectedEvent.price}$</h2>\r\n          <h2>{new Date(selectedEvent.date).toLocaleDateString()}</h2>\r\n          <p>{selectedEvent.description}</p>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './MainNavigation.css';\r\nimport AuthContext from '../../context/auth-context';\r\nimport { useContext } from 'react';\r\n\r\nconst MainNavigation = () => {\r\n  const context = useContext(AuthContext);\r\n  return (\r\n    <header className=\"main-navigation\">\r\n      <div className=\"main-navigation__logo\">\r\n        <h1>BookingApp</h1>\r\n      </div>\r\n      <nav className=\"main-navigation__items\">\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/events\">Events</NavLink>\r\n          </li>\r\n          {context.token && (\r\n            <React.Fragment>\r\n              <li>\r\n                <NavLink to=\"/bookings\">Bookings</NavLink>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  onClick={() => context.logout()}\r\n                  className=\"LogOutButton\"\r\n                >\r\n                  Logout\r\n                </button>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {!context.token && (\r\n            <li>\r\n              <NavLink to=\"/auth\">Authentication</NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport AuthPage from \"./pages/Auth\";\r\nimport BookingsPage from \"./pages/Bookings\";\r\nimport EventsPage from \"./pages/Events\";\r\nimport MainNavigation from \"./components/Navigation/MainNavigation\";\r\nimport \"./App.css\";\r\nimport AuthContext from \"./context/auth-context\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [token, settoken] = useState(\"\");\r\n  const [userId, setuserId] = useState(\"\");\r\n  const login = (tokenFc, userIdFc, tokenExpiration) => {\r\n    settoken(tokenFc);\r\n    setuserId(userIdFc);\r\n  };\r\n  const logout = () => {\r\n    settoken(\"\");\r\n    setuserId(\"\");\r\n  };\r\n  return (\r\n    <BrowserRouter>\r\n      <AuthContext.Provider value={{ token, userId, login, logout }}>\r\n        <MainNavigation></MainNavigation>\r\n        <main className=\"main-content\">\r\n          <Switch>\r\n            {/* Wichtig damit nur bei / auf auth gewechselt wird und nicht alles folgende ignoriert wird */}\r\n            {token && <Redirect from=\"/\" to=\"/events\" exact></Redirect>}\r\n            {token && <Redirect from=\"/auth\" to=\"/events\" exact></Redirect>}\r\n            {!token && <Route path=\"/auth\" component={AuthPage}></Route>}\r\n            <Route path=\"/events\" component={EventsPage}></Route>\r\n            {token && <Route path=\"/bookings\" component={BookingsPage}></Route>}\r\n            {!token && <Redirect to=\"/auth\" exact></Redirect>}\r\n          </Switch>\r\n        </main>\r\n      </AuthContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}